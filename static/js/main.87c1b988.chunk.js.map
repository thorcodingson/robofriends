{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","console","log","this","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,G,MAZF,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,GAC1B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,gCACI,6BAAKL,IACL,4BAAIC,YCkBLK,EAvBE,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAIjB,OACI,8BAEQA,EAAOC,KAAK,SAACC,EAAMC,GACf,OAAQ,cAAC,EAAD,CAEIR,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHPS,SCGtBC,EAbG,SAAC,GAAiC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EATA,SAACC,GACZ,OAEI,aADA,CACA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCoBJC,E,kDAvBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAWDC,EAAOC,GACrBC,QAAQC,IAAIH,EAAOC,K,+BAInB,OAAIG,KAAKN,MAAMC,SACJ,2DAEJK,KAAKb,MAAMK,Y,gDAZUI,GAC5B,MAAO,CAAED,UAAU,O,GATAM,aCgDZC,E,kDAzCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAExB,YAAauB,EAAME,OAAOC,SAd1C,EAAKb,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChB2B,MAAM,6CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAAC7B,OAAQoC,S,+BASpC,IAAD,EAC2BZ,KAAKN,MAA7BlB,EADH,EACGA,OAAQK,EADX,EACWA,YACVgC,EAAiBrC,EAAOsC,QAAO,SAAAC,GACjC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASpC,EAAYmC,kBAEzD,OAAQhB,KAAKN,MAAMlB,OAAO0C,OAGlB,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAckB,KAAKG,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQqC,WAPlC,6C,GA3BMZ,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.87c1b988.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ( { name, email, id } ) => {\n    return (\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ( { robots } ) => {\n    // if (true) {\n    //     throw new Error('NOOOOOO!');\n    // }\n    return (\n        <div>\n            {\n                robots.map( (user, i) => {\n                    return (<Card\n                                key={i}\n                                id={user.id}\n                                name={user.name}\n                                email={user.email}\n                            />\n                            );\n                })\n            }\n        </div>\n    );\n}\n\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        // first {} for JavaScript expression, and inside {} is object\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        console.log(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Ooooops. That is not good</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from '../components/CardList';\nimport SerachBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('http://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}));\n\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value});\n\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        return !this.state.robots.length ?\n            <h1>Loading</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SerachBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}